# https://github.com/docker/for-win/issues/1588
# https://github.com/vercel/hyper/issues/2888

######################################################
winpty docker.exe run -it --rm ubuntu:14.04 /bin/bash
######################################################


# On git bash just type:
#########################################
alias docker="winpty docker"
##########################################
and tty will work

after starting the docker I mean when it will run
do a docker login from PowerShell (git-bash )and then use git-bash

then create docker conatainer
docker container run -it -p 80:80 nginx


## Volume Mount
# https://github.com/docker/for-win/issues/3885
docker run --name amazonlinux -v c:/Users/Muhammad\ Asim/Desktop/vpc:/root -id amazonlinux

########################################################### DOCKER #######################################################
# https://tomgregory.com/running-docker-in-docker-on-windows/
# Docker in Docker

docker run --name gcp --group-add 0 -v "/var/run/docker.sock:/var/run/docker.sock" -id google/cloud-sdk:latest         ---> run in Poweshell (Admin)

########################################################## VSCODE/ALL Editors in the World/All OS of the worls) #############################################

docker run --name ubuntu --group-add 0 -v "/var/run/docker.sock:/var/run/docker.sock"  -v "c:/Users/Muhammad Asim/Desktop/ubuntu:/root" -id ubuntu:latest

docker run --name centos --group-add 0 -v "/var/run/docker.sock:/var/run/docker.sock"  -v "c:/Users/Muhammad Asim/Desktop/centos:/root" -id centos:latest

docker run --name amazonlinux --group-add 0 -v "/var/run/docker.sock:/var/run/docker.sock"  -v "c:/Users/Muhammad Asim/Desktop/amazonlinux:/root" -id amazonlinux:latest

docker run --name nginx --group-add 0 -v "/var/run/docker.sock:/var/run/docker.sock"  -v "c:/Users/Muhammad Asim/Desktop/nginx:/usr/share/nginx/html" -p 80:80 -id nginx:latest

Note: docker not found inside container simply install it


######################################################################### SETUP IN Kafka directory ###############################################################

---
version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    networks:
      - kafka
    restart: unless-stopped
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    networks:
      - kafka
    restart: unless-stopped
    user: root
    ports:
      - '9092:9092'
      - '9093:9093'
    volumes:
      - $PWD/kafka-persistence:/bitnami/kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
networks:
  kafka:
      external: true


############################################
# docker network create kafka --attachable
############################################

# https://docs.confluent.io/5.5.0/quickstart/cos-docker-quickstart.html

  # Important Commands 

### Topic Creation without docker exec in to container ###

 # Topic Creation
 --------------------
# docker exec kafka_kafka_1 kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 2 --partitions 3 --topic my-topic
# ---> Mentioned above command give us an error because, we have 1 broker & setting up replication factor 2
# Error while executing topic command : Replication factor: 2 larger than available brokers: 1


# docker exec kafka_kafka_1 kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 3 --topic my-topics

# docker exec kafka_kafka_1 kafka-topics.sh kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic my-topic

# List Topic
--------------
# docker exec kafka_kafka_1 kafka-topics.sh  --list --zookeeper zookeeper:2181

# Describe a topic
-------------------
# docker exec kafka_kafka_1 kafka-topics.sh  --describe --topic my-topic --zookeeper zookeeper:2181

# Creating Producers
---------------------
# docker exec -it kafka_kafka_1 kafka-console-producer.sh --bootstrap-server localhost:9092 --topic my-topic

  # Creating Consumers
  ---------------------
 # docker exec -it kafka_kafka_1 kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic my-topic --from-beginning

  # Listing Consumers Groups
  --------------------------
  # docker exec kafka_kafka_1 kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list

  # Describe Consumers Groups
  ----------------------------
  # docker exec kafka_kafka_1 kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group GROUPNAME

  # Consumer Offsets  (Consumer information stored in consumer offsets by kafka)
  --------------------------------------------------------------------------------
  # docker exec kafka_kafka_1 kafka-topics.sh --bootstrap-server localhost:9092 --list



 # docker-compose -f docker-compose.yml up

 # docker-compose -f docker-compose.yml up -d


  # https://github.com/bitnami/bitnami-docker-kafka








































